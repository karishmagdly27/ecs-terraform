trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: ECS
- name: TF_VERSION
  value: "1.9.7"
- name: AWS_REGION
  value: "us-west-2"
- name: AWS_ACCOUNT_ID
  value: "597406702314"
- name: TFSTATE_BUCKET
  value: "kari-terraform-state-bucket"
- name: DYNAMODB_TABLE
  value: "ecs-terraform-lock-kari"

steps:

# Step 1: Install Terraform and AWS CLI
- script: |
    sudo apt-get update
    sudo apt-get install -y wget unzip awscli
    wget https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip
    unzip terraform_$(TF_VERSION)_linux_amd64.zip
    sudo mv terraform /usr/local/bin/
    terraform --version
    aws --version
  displayName: 'Install Terraform and AWS CLI'

# Step 2: Set AWS credentials
- script: |
    export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
    export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
    export AWS_DEFAULT_REGION=$(AWS_REGION)
  displayName: 'Set AWS Credentials'

# Step 3: Create S3 bucket if it doesn't exist
- script: |
    aws s3api head-bucket --bucket $(TFSTATE_BUCKET) 2>/dev/null || \
    aws s3api create-bucket --bucket $(TFSTATE_BUCKET) --region $(AWS_REGION) --create-bucket-configuration LocationConstraint=$(AWS_REGION)
    echo "S3 bucket ready: $(TFSTATE_BUCKET)"
  displayName: 'Create S3 Bucket'

# Step 4: Create DynamoDB table if it doesn't exist
- script: |
    aws dynamodb describe-table --table-name $(DYNAMODB_TABLE) 2>/dev/null || \
    aws dynamodb create-table \
      --table-name $(DYNAMODB_TABLE) \
      --attribute-definitions AttributeName=LockID,AttributeType=S \
      --key-schema AttributeName=LockID,KeyType=HASH \
      --billing-mode PAY_PER_REQUEST \
      --region $(AWS_REGION)
    echo "DynamoDB table ready: $(DYNAMODB_TABLE)"
  displayName: 'Create DynamoDB Table'

# Step 5: Terraform Init
- script: |
    export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
    export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
    export AWS_DEFAULT_REGION=$(AWS_REGION)
    terraform init
  workingDirectory: '.'
  displayName: 'Terraform Init'

# Step 6: Terraform Plan
- script: |
    export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
    export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
    export AWS_DEFAULT_REGION=$(AWS_REGION)
    terraform plan -out=tfplan \
      -var "aws_region=$(AWS_REGION)" \
      -var "aws_account_id=$(AWS_ACCOUNT_ID)" \
      -var "tfstate_s3_bucket=$(TFSTATE_BUCKET)" \
      -var "dynamodb_table=$(DYNAMODB_TABLE)"
  workingDirectory: '.'
  displayName: 'Terraform Plan'

# Step 7: Terraform Apply
- script: |
    export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
    export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
    export AWS_DEFAULT_REGION=$(AWS_REGION)
    terraform apply -auto-approve tfplan
  workingDirectory: '.'
  displayName: 'Terraform Apply'
